/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.26).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.TokenRequest;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2022-03-23T17:05:44.642Z")

@Validated
@Api(value = "cataloguer", description = "the cataloguer API")
@RequestMapping(value = "")
public interface CataloguerApi {

    @ApiOperation(value = "Solicitar e armazenar em memória o token de autenticação do IoT Cataloguer", nickname = "cataloguerAuthenticatePost", notes = "", tags={ "cataloguer", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Token salvo em memória"),
        @ApiResponse(code = 400, message = "Erro durante autenticação") })
    @RequestMapping(value = "/cataloguer/authenticate",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<Void> cataloguerAuthenticatePost(@ApiParam(value = "variáveis para obter o token de autenticaçãdo do IoT Cataloguer" ,required=true )  @Valid @RequestBody TokenRequest body);


    @ApiOperation(value = "Registra uma permissão no IoT Cataloguer, para o dispositivo de IoT controlado pelo Entity Manager", nickname = "cataloguerAuthorizationPost", notes = "", tags={ "cataloguer", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Autorização concedida"),
        @ApiResponse(code = 400, message = "Erro ao conceder autorização") })
    @RequestMapping(value = "/cataloguer/authorization",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> cataloguerAuthorizationPost(@ApiParam(value = "identificador da identidade do dispositivo, do recurso InterSCity e da capacidade autorizada" ,required=true )  @Valid @RequestBody Object body);


    @ApiOperation(value = "Apaga o IoT Device registrado no IoT Cataloguer", nickname = "cataloguerDeviceIdentifierDelete", notes = "", response = String.class, tags={ "cataloguer", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Dispositivo  deletado", response = String.class),
        @ApiResponse(code = 400, message = "Dispositivo não deletado") })
    @RequestMapping(value = "/cataloguer/device/{identifier}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.DELETE)
    ResponseEntity<String> cataloguerDeviceIdentifierDelete(@ApiParam(value = "identificador do IoT Device a ser deletado",required=true) @PathVariable("identifier") String identifier);


    @ApiOperation(value = "Registra um dispositivo de IoT controlado pelo Entity Manager no IoT Cataloguer", nickname = "cataloguerDevicePost", notes = "", tags={ "cataloguer", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Dispositivo registrado"),
        @ApiResponse(code = 400, message = "Dispositivo não registrado") })
    @RequestMapping(value = "/cataloguer/device",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> cataloguerDevicePost(@ApiParam(value = "identificador da identidade do dispositivo controlado pelo Entity Manager autenticado" ,required=true )  @Valid @RequestBody Object body);

}
